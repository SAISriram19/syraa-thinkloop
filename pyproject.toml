[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "syraa"
version = "0.1.0"
description = "AI-powered virtual front desk agent for clinics and hospitals"
readme = "README.md"
authors = [
    {name = "SYRAA Team", email = "contact@syraa.ai"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Communications :: Telephony",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["ai", "healthcare", "telemedicine", "voice-assistant", "telephony"]
dependencies = [
    # Core
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.21.0",
    "pydantic>=1.10.0",
    "python-dotenv>=1.0.0",
    
    # Database
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.10.0",
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.27.0",
    "supabase>=1.0.0",
    
    # AI/ML
    "google-generativeai>=0.1.0",
    "openai>=0.27.0",
    "numpy>=1.24.0",
    "pandas>=1.5.0",
    
    # Voice
    "livekit-api>=0.9.0",
    "deepgram-sdk>=3.0.0",
    "soundfile>=0.12.0",
    
    # Telephony
    "plivo>=4.25.0",
    "twilio>=8.0.0",
    "phonenumbers>=8.13.0",
    
    # Google Services
    "google-auth>=2.16.0",
    "google-auth-oauthlib>=1.0.0",
    "google-api-python-client>=2.80.0",
    "google-auth-httplib2>=0.1.0",
    
    # Utilities
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.5",
    "python-slugify>=6.0.0",
    "python-dateutil>=2.8.2",
    "pytz>=2022.7",
    "tqdm>=4.65.0",
    "loguru>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "types-python-dateutil>=2.8.0",
    "types-requests>=2.28.0",
    "types-pytz>=2022.7.0",
    "pre-commit>=3.0.0",
    "ipdb>=0.13.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
    "freezegun>=1.2.0",
    "factory-boy>=3.2.0",
]

docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-jupyter>=0.24.0",
    "mkdocs-markdownextradata-plugin>=0.2.0",
    "mkdocs-minify-plugin>=0.6.0",
    "mkdocs-redirects>=1.1.0",
    "markdown-include>=0.8.0",
    "pymdown-extensions>=9.9.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/syraa"
Documentation = "https://github.com/yourusername/syraa#readme"
Issues = "https://github.com/yourusername/syraa/issues"
Source = "https://github.com/yourusername/syraa"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "alembic.*",
    "pydantic.*",
    "fastapi.*",
    "uvicorn.*",
]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --cov=syraa --cov-report=term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["syraa"]
omit = ["**/__init__.py", "**/tests/**"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "htmlcov"

[metadata]
license = "MIT"
license_files = ["LICENSE"]

[metadata.license-files]
paths = ["LICENSE"]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"
